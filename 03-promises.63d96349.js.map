{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,IAAIC,EAAe,C,SAAEL,E,MAAUC,GAE/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,GACFK,EAAQF,GAERG,EAAOH,EAAa,G,CAdXI,SAASC,cAAc,SAC/BC,iBAAiB,UAoBxB,SAAsBC,GACnBA,EAAEC,iBACH,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACrCC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,YAAW,KACTzB,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,GAC9DA,EAAM,IAEVwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,YAAW,KACTzB,EAAA0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,GAC3DA,EAAM,IAEba,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  let promiseValue = { position, delay };\n  // console.log(promiseValue);\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promiseValue);\n    }\n      reject(promiseValue);\n  })\n}\n// createPromise()\n\n\n\nfunction onFormSubmit(e) {\n   e.preventDefault();\n  let delay = Number(e.currentTarget.delay.value);\n  let step = Number(e.currentTarget.step.value);\n  let amount = Number(e.currentTarget.amount.value);\n\nfor (let position = 1; position <= amount; position += 1) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      setTimeout(() => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }, delay);\n    })\n    .catch(({ position, delay }) => {\n      setTimeout(() => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }, delay);\n    });\n  delay += step;\n}\n  \n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","setTimeout","Notify","success","catch","failure"],"version":3,"file":"03-promises.63d96349.js.map"}